# https://github.com/DefectDojo/django-DefectDojo/blob/dev/docker-compose.yml
# https://github.com/DefectDojo/django-DefectDojo/blob/dev/docker/environments/postgres-rabbitmq.env

# This docker-compose.yml file is fully functional to evaluate DefectDojo
# with postgres-rabbitmq in your local environment.
#
# Although Docker Compose is one of the supported installation methods to
# deploy a containerized DefectDojo in a production environment, the
# docker-compose.yml file is not intended for production use without first
# customizing it to your particular situation.


# Access the application:
# https://github.com/DefectDojo/django-DefectDojo/blob/dev/readme-docs/DOCKER.md#access-the-application


# It is strongly recommended to create an .env file with at least these variables:
# DD_PORT=8080
# DD_TLS_PORT=8443
#
# DD_ADMIN_USER=admin
# DD_ADMIN_MAIL=admin@defectdojo.local
# DD_ADMIN_FIRST_NAME=Admin
# DD_ADMIN_LAST_NAME=User
#
# DD_ALLOWED_HOSTS=*
# DD_SECRET_KEY=hhZCp@D28z!n@NED*yB!ROMt+WzsY*iq
# DD_CREDENTIAL_AES_256_KEY=&91a*agLqesc*0DJ+2*bAbsUZfR*4nLw
#
# DD_DATABASE_PASSWORD=defectdojo


services:
  # https://hub.docker.com/r/defectdojo/defectdojo-nginx
  nginx:
    build:
      context: ./
      dockerfile: "Dockerfile.nginx-${DEFECT_DOJO_OS:-debian}"
    image: "defectdojo/defectdojo-nginx:${NGINX_VERSION:-latest}"
    depends_on:
      - uwsgi
    restart: unless-stopped
    ports:
      - target: 8080
        published: ${DD_PORT:-8080}
        protocol: tcp
        mode: host
      - target: 8443
        published: ${DD_TLS_PORT:-8443}
        protocol: tcp
        mode: host
    environment:
      NGINX_METRICS_ENABLED: "${NGINX_METRICS_ENABLED:-false}"
    volumes:
      - type: bind
        source: ./volumes/defectdojo/media
        target: /usr/share/nginx/html/media
        bind:
          create_host_path: true

  # https://hub.docker.com/r/defectdojo/defectdojo-django
  uwsgi:
    build:
      context: ./
      dockerfile: "Dockerfile.django-${DEFECT_DOJO_OS:-debian}"
      target: django
    image: "defectdojo/defectdojo-django:${DJANGO_VERSION:-latest}"
    depends_on:
      - postgres
    restart: unless-stopped
    entrypoint: ['/wait-for-it.sh', '${DD_DATABASE_HOST:-postgres}:${DD_DATABASE_PORT:-5432}', '-t', '30', '--', '/entrypoint-uwsgi.sh']
    environment:
      DD_DEBUG: 'False'
      DD_DJANGO_METRICS_ENABLED: "${DD_DJANGO_METRICS_ENABLED:-False}"
      DD_ALLOWED_HOSTS: "${DD_ALLOWED_HOSTS:-*}"
      DD_DATABASE_URL: "postgresql://${DD_DATABASE_USER:-defectdojo}:${DD_DATABASE_PASSWORD:-defectdojo}@${DD_DATABASE_HOST:-postgres}:${DD_DATABASE_PORT:-5432}/${DD_DATABASE_NAME:-defectdojo}"
      DD_CELERY_BROKER_URL: "${DD_CELERY_BROKER_URL:-amqp://guest:guest@rabbitmq:5672//}"
      DD_SECRET_KEY: "${DD_SECRET_KEY:-hhZCp@D28z!n@NED*yB!ROMt+WzsY*iq}"
      DD_CREDENTIAL_AES_256_KEY: "${DD_CREDENTIAL_AES_256_KEY:-&91a*agLqesc*0DJ+2*bAbsUZfR*4nLw}"
    volumes:
      - type: bind
        source: ./volumes/defectdojo/docker/extra_settings
        target: /app/docker/extra_settings
        bind:
          create_host_path: true
      - type: bind
        source: ./volumes/defectdojo/media
        target: ${DD_MEDIA_ROOT:-/app/media}
        bind:
          create_host_path: true

  celerybeat:
    image: "defectdojo/defectdojo-django:${DJANGO_VERSION:-latest}"
    depends_on:
      - postgres
    restart: unless-stopped
    entrypoint: ['/wait-for-it.sh', '${DD_DATABASE_HOST:-postgres}:${DD_DATABASE_PORT:-5432}', '-t', '30', '--', '/entrypoint-celery-beat.sh']
    environment:
      DD_DATABASE_URL: "postgresql://${DD_DATABASE_USER:-defectdojo}:${DD_DATABASE_PASSWORD:-defectdojo}@${DD_DATABASE_HOST:-postgres}:${DD_DATABASE_PORT:-5432}/${DD_DATABASE_NAME:-defectdojo}"
      DD_CELERY_BROKER_URL: "${DD_CELERY_BROKER_URL:-amqp://guest:guest@rabbitmq:5672//}"
      DD_SECRET_KEY: "${DD_SECRET_KEY:-hhZCp@D28z!n@NED*yB!ROMt+WzsY*iq}"
      DD_CREDENTIAL_AES_256_KEY: "${DD_CREDENTIAL_AES_256_KEY:-&91a*agLqesc*0DJ+2*bAbsUZfR*4nLw}"
    volumes:
      - type: bind
        source: ./volumes/defectdojo/docker/extra_settings
        target: /app/docker/extra_settings
        bind:
          create_host_path: true

  celeryworker:
    image: "defectdojo/defectdojo-django:${DJANGO_VERSION:-latest}"
    depends_on:
      - postgres
    restart: unless-stopped
    entrypoint: ['/wait-for-it.sh', '${DD_DATABASE_HOST:-postgres}:${DD_DATABASE_PORT:-5432}', '-t', '30', '--', '/entrypoint-celery-worker.sh']
    environment:
      DD_DATABASE_URL: "postgresql://${DD_DATABASE_USER:-defectdojo}:${DD_DATABASE_PASSWORD:-defectdojo}@${DD_DATABASE_HOST:-postgres}:${DD_DATABASE_PORT:-5432}/${DD_DATABASE_NAME:-defectdojo}"
      DD_CELERY_BROKER_URL: "${DD_CELERY_BROKER_URL:-amqp://guest:guest@rabbitmq:5672//}"
      DD_SECRET_KEY: "${DD_SECRET_KEY:-hhZCp@D28z!n@NED*yB!ROMt+WzsY*iq}"
      DD_CREDENTIAL_AES_256_KEY: "${DD_CREDENTIAL_AES_256_KEY:-&91a*agLqesc*0DJ+2*bAbsUZfR*4nLw}"
    volumes:
      - type: bind
        source: ./volumes/defectdojo/docker/extra_settings
        target: /app/docker/extra_settings
        bind:
          create_host_path: true
      - type: bind
        source: ./volumes/defectdojo/media
        target: ${DD_MEDIA_ROOT:-/app/media}
        bind:
          create_host_path: true

  initializer:
    image: "defectdojo/defectdojo-django:${DJANGO_VERSION:-latest}"
    depends_on:
      - postgres
    restart: unless-stopped
    entrypoint: ['/wait-for-it.sh', '${DD_DATABASE_HOST:-postgres}:${DD_DATABASE_PORT:-5432}', '--', '/entrypoint-initializer.sh']
    environment:
      DD_DATABASE_URL: "postgresql://${DD_DATABASE_USER:-defectdojo}:${DD_DATABASE_PASSWORD:-defectdojo}@${DD_DATABASE_HOST:-postgres}:${DD_DATABASE_PORT:-5432}/${DD_DATABASE_NAME:-defectdojo}"
      DD_ADMIN_USER: "${DD_ADMIN_USER:-admin}"
      DD_ADMIN_MAIL: "${DD_ADMIN_MAIL:-admin@defectdojo.local}"
      DD_ADMIN_FIRST_NAME: "${DD_ADMIN_FIRST_NAME:-Admin}"
      DD_ADMIN_LAST_NAME: "${DD_ADMIN_LAST_NAME:-User}"
      DD_INITIALIZE: "${DD_INITIALIZE:-true}"
      DD_SECRET_KEY: "${DD_SECRET_KEY:-hhZCp@D28z!n@NED*yB!ROMt+WzsY*iq}"
      DD_CREDENTIAL_AES_256_KEY: "${DD_CREDENTIAL_AES_256_KEY:-&91a*agLqesc*0DJ+2*bAbsUZfR*4nLw}"
    volumes:
      - type: bind
        source: ./volumes/defectdojo/docker/extra_settings
        target: /app/docker/extra_settings
        bind:
          create_host_path: true

  # https://hub.docker.com/_/postgres/tags?page=&page_size=&ordering=&name=16.3-alpine
  postgres:
    image: postgres:16.3-alpine@sha256:e89da2c083a5405943408b6807cd1fd25dc9010c1294e30611b841778bedc653
    restart: unless-stopped
    environment:
      POSTGRES_DB: "${DD_DATABASE_NAME:-defectdojo}"
      POSTGRES_USER: "${DD_DATABASE_USER:-defectdojo}"
      POSTGRES_PASSWORD: "${DD_DATABASE_PASSWORD:-defectdojo}"
    volumes:
      - type: bind
        source: ./volumes/postgres
        target: /var/lib/postgresql/data
        bind:
          create_host_path: true

  # https://hub.docker.com/layers/library/rabbitmq/3.13.2-alpine/images/sha256-c187ae504b9481d3ff15a54c57abdb4cd65c24fda6c578d12e66ac88adf2515b?context=explore
  rabbitmq:
    image: rabbitmq:3.13.2-alpine@sha256:9880c790e61a6ba7f2740b208f5584c08ce2fe668ef4852d30e554a1c07b6f63
    restart: unless-stopped
    volumes:
      - type: bind
        source: ./volumes/rabbitmq
        target: /var/lib/rabbitmq
        bind:
          create_host_path: true
